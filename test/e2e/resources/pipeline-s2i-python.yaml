---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    name: task-s2i-python
  name: task-s2i-python
spec:
  params:
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from.
      default: .
      type: string
    - name: IMAGE
      description: Full qualified registry url, including image name and tag.
      type: string
    - name: TLS_VERIFY
      type: string
      description: |
        Sets the TLS verification flags
    - name: VERBOSE
      type: string
      description: Verbose logging

  workspaces:
    - name: source
      
  tasks:
    - name: git
      taskRef:
        name: git
      workspaces:
        - name: output
          workspace: source
      params:
        - name: URL
          value: https://github.com/sclorg/django-ex      # This will basically contain the reference to the github repository containing the Golang application source code whose image we want to generate.
        - name: REVISION                                  # Specify the branch of the github repository exclusively if it is not main branch. 
          value: master
    - name: s2i-python-pr
      taskRef:
        name: s2i-python-pr
      runAfter:
        - git
      workspaces:
        - name: source
          workspace: source
      params:
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: IMAGE
          value: $(params.IMAGE)
        - name: VERSION
          value: $(params.VERSION)
        - name: TLS_VERIFY
          value: $(params.TLS_VERIFY)
        - name: VERBOSE
          value: $(params.VERBOSE)

  tasks:
    - name: git
      taskRef:
        name: git
      workspaces:
        - name: output
          workspace: source
      params:
        - name: URL
          value: https://github.com/sclorg/django-ex      # This will basically contain the reference to the github repository containing the Golang application source code whose image we want to generate.
        - name: REVISION                                  # Specify the branch of the github repository exclusively if it is not main branch. 
          value: master
    - name: s2i-python-pr
      taskRef:
        name: s2i-python-pr
      runAfter:
        - git
      workspaces:
        - name: source
          workspace: source
      params:
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: IMAGE
          value: $(params.IMAGE)
        - name: VERSION
          value: $(params.VERSION)
        - name: TLS_VERIFY
          value: $(params.TLS_VERIFY)
        - name: VERBOSE
          value: $(params.VERBOSE)
    - name: buildah
      taskRef:
        name: buildah
      runAfter:
        - s2i-python-pr
      workspaces:
        - name: source
          workspace: source
      params:
        - name: IMAGE
          value: $(params.IMAGE)
        - name: SUBDIRECTORY
          value: $(params.SUBDIRECTORY)
        - name: CONTAINERFILE_PATH
          value: Dockerfile.gen                #/gen-source/Dockerfile #$(params.CONTAINERFILE_PATH)
        - name: STORAGE_DRIVER
          value: $(params.STORAGE_DRIVER)
        - name: BUILD_EXTRA_ARGS
          value: $(params.BUILD_EXTRA_ARGS)
        - name: PUSH_EXTRA_ARGS
          value: $(params.PUSH_EXTRA_ARGS)
        - name: SKIP_PUSH
          value: $(params.SKIP_PUSH)
        - name: TLS_VERIFY
          value: $(params.TLS_VERIFY)
        - name: VERBOSE
          value: $(params.VERBOSE)