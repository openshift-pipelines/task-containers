apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-python-pr
  labels:
    app.kubernetes.io/version: {{ .Chart.Version }}
{{- if .Values.annotations }}
  annotations:
  {{- .Values.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  description: >-
    s2i-python task clones a Git repository and builds and
    pushes a container image using S2I and a Python builder image.

  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
  params:
    - name: VERSION
      description: The tag of python imagestream for python version
      default: '3.8-ubi8'
      type: string
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from.
      default: .
      type: string
    - name: TLS_VERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
      type: string
    - name: IMAGE
      description: Location of the repo where image has to be pushed
      type: string
    - name: VERBOSE
      type: string
      default: "true"
      description: |
        Shows a more verbose (debug) output.
  workspaces:
    - name: source
      mountPath: /workspace/source
  steps:
    - name: generate
      image: quay.io/openshift-pipeline/s2i:latest
      workingDir: $(workspaces.source.path)
      command: ['s2i', 'build', '$(params.PATH_CONTEXT)','registry.access.redhat.com/ubi8/python-39:latest', '--as-dockerfile', '/gen-source/Dockerfile.gen']
      env:
        - name: HOME
          value: /tekton/home
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
    - name: check-dockerfile
      image: busybox
      workingDir: /gen-source
      command: ['sh', '-c', 'if [ -f "/gen-source/Dockerfile.gen" ]; then echo "Dockerfile generated successfully : "; cat "Dockerfile.gen"; else echo "Failed to generate Dockerfile"; exit 1; fi']
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
    - name: build
      image: quay.io/buildah/stable:latest
      workingDir: /gen-source
      command: ['buildah', 'bud', '--storage-driver=vfs', '--tls-verify=$(params.TLS_VERIFY)', '--layers', '-f', '/gen-source/Dockerfile.gen', '-t', '$(params.IMAGE)', '.']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
    - name: push
      workingDir: $(workspaces.source.path)
      image: quay.io/buildah/stable:latest
      command: ['buildah', 'push', '--storage-driver=vfs', '--tls-verify=$(params.TLS_VERIFY)', '--digestfile=/gen-source/image-digest', '$(params.IMAGE)', 'docker://$(params.IMAGE)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
    - name: display-image-digest
      image: busybox
      command: ['cat', '/gen-source/image-digest']
      volumeMounts:
         - name: gen-source
           mountPath: /gen-source
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}