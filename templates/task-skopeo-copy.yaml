---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: skopeo-copy
  labels:
    app.kubernetes.io/version: {{ .Chart.Version }}
{{- if .Values.annotations }}
  annotations:
  {{- .Values.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  description: |
    Skopeo is a command line tool for working with remote image registries.
    Skopeo doesnâ€™t require a daemon to be running while performing its operations. In particular,
    the handy skopeo command called copy will ease the whole image copy operation. 
    The copy command will take care of copying the image from internal.registry to production.registry.
    If your production registry requires credentials to login in order to push the image, skopeo can handle that as well.
    After copying the source and destination images SHA256 digest is stored as results.
  workspaces:
    - name: images_url
      optional: true
      description: |
        For storing image urls in case we have more than one image to copy.
  params:
    - name: SOURCE_IMAGE_URL
      type: string
      description: |
        Fully qualified source container image name, including tag, to be copied
        into `DESTINATION_IMAGE_URL` param.
    - name: DESTINATION_IMAGE_URL
      type: string
      description: |
        Fully qualified destination container image name, including tag.
    - name: SRC_TLS_VERIFY
      type: string
      default: "true"
      description: |
        Sets the TLS verification flags for the source registry, `true` is recommended.
    - name: DEST_TLS_VERIFY
      type: string
      default: "true"
      description: |
        Sets the TLS verification flags for the destination registry, `true` is recommended.
    - name: VERBOSE
      type: string
      default: "false"
      description: |
        Shows a more verbose (debug) output.

  results:
    - name: SOURCE_DIGEST
      type: string
      description: |
        Source image SHA256 digest.
    - name: DESTINATION_DIGEST
      type: string
      description: |
        Destination image SHA256 digest.

  volumes:
    - name: scripts-dir
      emptyDir: {}

  stepTemplate:
    env:
{{- $variables := list
      "params.SOURCE_IMAGE_URL"
      "params.DESTINATION_IMAGE_URL"
      "params.SRC_TLS_VERIFY"
      "params.DEST_TLS_VERIFY"
      "params.VERBOSE"
      "workspaces.images_url.bound"
      "workspaces.images_url.path"
      "results.SOURCE_DIGEST.path"
      "results.DESTINATION_DIGEST.path"
}}
{{- include "environment" ( list $variables ) | nindent 6 }}

  steps:
{{- include "load_scripts" ( list . "skopeo-" ) | nindent 4 }}

    - name: skopeo-copy
      image: {{ .Values.images.skopeo }}
      command:
        - /scripts/skopeo-copy.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts

    - name: skopeo-results
      image: {{ .Values.images.skopeo }}
      command:
        - /scripts/skopeo-results.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts
